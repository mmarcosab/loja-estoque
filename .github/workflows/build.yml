# This is a basic workflow to help you get started with Actions
name: Build
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches:
      - develop
    paths-ignore:
      - '**.md'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  compile:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Compile code
      run: mvn -B compile
   
  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Build the Maven Project
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Start MongoDB 4.2
      uses: supercharge/mongodb-github-action@1.2.0
      with:
        mongodb-version: 4.2

    - name: Compile code
      run: mvn -B verify
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v2
      with:
        name: loja-estoque.jar
        path: github-actions-java-maven/target/github-actions-java-maven.jar

# steps de deploy
# aqui eh possivel criar containers, subir pro docker hub ou alguma cloud
# por enquanto deixei apenas os steps

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: development
#      url:
    steps:
      - name: run deploy-dev script
        run: echo deploy-dev

  deploy-hom:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: hom
#url:
    steps:
      - name: run deploy-hom script
        run: echo deploy-hom

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: prod
#      url:
    steps:
      - name: run deploy-prod script
        run: echo deploy-prod

#  deploy:
#    runs-on: ubuntu-20.04
#    needs: build
#    name: Build Docker Container and Deploy to Kubernetes
#    steps:
#    - uses: actions/checkout@v2
#    - name: Download Maven build artifact
#      uses: actions/download-artifact@v2
#      with:
#        name: loja-estoque.jar
#        path: github-actions-java-maven/target
#    - name: Build Docker container
#      working-directory: github-actions-java-maven
#      run: |
#        docker build -t de.rieckpil.blog/github-actions-sample .
#    - name: Access secrets
#      env:
#        SUPER_SECRET: ${{ secrets.SUPER_SECRET }}
#      run: echo "Content of secret - $SUPER_SECRET"
#    - name: Push Docker images
#      run: echo "Pushing Docker image to Container Registry (e.g. ECR)"
#    - name: Deploy application
#      run: echo "Deploying application (e.g. Kubernetes)"
